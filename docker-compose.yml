version: '3'

services:
  acervo:
    build:
      context: ./src/acervo
      dockerfile: Dockerfile
    restart: unless-stopped

    ports:
      - "${ACERVO_PORT}:8000"
    environment:
      MONGO_SERVER: ${MONGO_URL}
      ACERVO_PORT: ${ACERVO_PORT}
    networks:
      - acervo_net

  recomendacoes:
    build:
      context: ./src/recomendacoes
      dockerfile: Dockerfile
    restart: unless-stopped

    ports:
      - "${RECOMENDACOES_PORT}:8000"
    environment:
      MONGO_SERVER: ${MONGO_URL}
      RECOMENDACOES_PORT: ${RECOMENDACOES_PORT}
    networks:
      - acervo_net

  usuarios:
    build:
      context: ./src/usuarios
      dockerfile: Dockerfile
    restart: unless-stopped

    ports:
      - "${USUARIOS_PORT}:8000"
    environment:
      MONGO_SERVER: ${MONGO_URL}
      USUARIOS_PORT: ${USUARIOS_PORT}
    networks:
      - acervo_net

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./src/frontend:/app
    ports:
      - "${FRONTEND_PORT}:5000"
    environment:
      ACERVO_URL: ${ACERVO_URL}
      USUARIOS_URL: ${USUARIOS_URL}
      RECOMENDACOES_URL: ${RECOMENDACOES_URL}
      FLASK_ENV: development
    networks:
      - acervo_net

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: acervo
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    networks:
      - acervo_net

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: ${MONGO_URL}
    networks:
      - acervo_net
    restart: unless-stopped
    depends_on:
      - mongo

networks:
  acervo_net:
    driver: bridge